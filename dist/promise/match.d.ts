export declare type Pattern<T, U> = [T | ((val: T) => boolean | Promise<boolean>), U | ((val: T) => Promise<U> | U)];
export declare type Patterns<T, U> = [T | ((val: T) => boolean | Promise<boolean>), U | ((val: T) => Promise<U> | U)][];
export declare type DefaultPattern<T, U> = [(val: T) => true | Promise<true>, U | ((val: T) => Promise<U> | U)];
export declare function match<T, U>(defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, p16: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, p16: Pattern<T, U>, p17: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, p16: Pattern<T, U>, p17: Pattern<T, U>, p18: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, p16: Pattern<T, U>, p17: Pattern<T, U>, p18: Pattern<T, U>, p19: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, p16: Pattern<T, U>, p17: Pattern<T, U>, p18: Pattern<T, U>, p19: Pattern<T, U>, p20: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, p16: Pattern<T, U>, p17: Pattern<T, U>, p18: Pattern<T, U>, p19: Pattern<T, U>, p20: Pattern<T, U>, p21: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, p16: Pattern<T, U>, p17: Pattern<T, U>, p18: Pattern<T, U>, p19: Pattern<T, U>, p20: Pattern<T, U>, p21: Pattern<T, U>, p22: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, p16: Pattern<T, U>, p17: Pattern<T, U>, p18: Pattern<T, U>, p19: Pattern<T, U>, p20: Pattern<T, U>, p21: Pattern<T, U>, p22: Pattern<T, U>, p23: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
export declare function match<T, U>(p0: Pattern<T, U>, p1: Pattern<T, U>, p2: Pattern<T, U>, p3: Pattern<T, U>, p4: Pattern<T, U>, p5: Pattern<T, U>, p6: Pattern<T, U>, p7: Pattern<T, U>, p8: Pattern<T, U>, p9: Pattern<T, U>, p10: Pattern<T, U>, p11: Pattern<T, U>, p12: Pattern<T, U>, p13: Pattern<T, U>, p14: Pattern<T, U>, p15: Pattern<T, U>, p16: Pattern<T, U>, p17: Pattern<T, U>, p18: Pattern<T, U>, p19: Pattern<T, U>, p20: Pattern<T, U>, p21: Pattern<T, U>, p22: Pattern<T, U>, p23: Pattern<T, U>, p24: Pattern<T, U>, defaultValue: DefaultPattern<T, U>): (val: T | Promise<T>) => Promise<U>;
